{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\n// Helper function to get filename from URL\nfunction getFileNameFromUrl(url) {\n  try {\n    const urlParts = url.split('/');\n    return urlParts[urlParts.length - 1].split('?')[0] || 'file';\n  } catch (error) {\n    return 'file';\n  }\n}\nModal.setAppElement('#root');\nfunction App() {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  const [customFileName, setCustomFileName] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: {\n          path: currentPath\n        }\n      });\n      setFolders(response.data.folders);\n      setFiles(response.data.files);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n  const handleBreadcrumbClick = index => {\n    const newPath = currentPath.split('/').slice(0, index + 1).join('/');\n    setCurrentPath(newPath);\n  };\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        // Get default filename from URL if no custom name is provided\n        const fileName = customFileName.trim() ? customFileName.trim() : getFileNameFromUrl(uploadUrl);\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath,\n          fileName: fileName,\n          displayName: displayName || customFileName || fileName\n        });\n        console.log(response.data.message);\n        setUploadUrl('');\n        setCustomFileName('');\n        setDisplayName('');\n        alert('File uploaded successfully!');\n        fetchFolders();\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Drive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsUploadModalOpen(true),\n        className: \"upload-button\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setCurrentPath(''),\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), currentPath.split('/').filter(Boolean).map((folder, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleBreadcrumbClick(index),\n        children: [' / ', folder]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: folders.length === 0 && files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\",\n          children: \"This folder is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item folder\",\n            onClick: () => handleSelect(folder),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\uD83D\\uDCC1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: folder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this)]\n          }, folder, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this)), files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item file\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon\",\n              children: \"\\uD83D\\uDCC4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"name\",\n              children: file.displayName || file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"size\",\n              children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)]\n          }, file.fileId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isUploadModalOpen,\n      onRequestClose: () => setIsUploadModalOpen(false),\n      contentLabel: \"Upload File\",\n      className: \"upload-modal\",\n      overlayClassName: \"upload-modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Upload File to \", currentPath || 'root']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"File URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: uploadUrl,\n            onChange: e => setUploadUrl(e.target.value),\n            placeholder: \"Enter file URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Custom File Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: customFileName,\n            onChange: e => setCustomFileName(e.target.value),\n            placeholder: \"Enter file name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Display Name (optional):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: displayName,\n            onChange: e => setDisplayName(e.target.value),\n            placeholder: \"Enter display name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Use this for multi-word names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUploadFile,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsUploadModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YIMI0LKED9BU+BaCLibuhCLosac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_URL","getFileNameFromUrl","url","urlParts","split","length","error","setAppElement","App","_s","folders","setFolders","files","setFiles","currentPath","setCurrentPath","loading","setLoading","setError","isUploadModalOpen","setIsUploadModalOpen","uploadUrl","setUploadUrl","customFileName","setCustomFileName","displayName","setDisplayName","fetchFolders","response","get","params","path","data","console","handleSelect","folder","newPath","handleBreadcrumbClick","index","slice","join","handleUploadFile","trim","fileName","post","fileUrl","log","message","alert","className","children","_jsxFileName","lineNumber","columnNumber","onClick","filter","Boolean","map","file","name","size","toFixed","fileId","isOpen","onRequestClose","contentLabel","overlayClassName","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\n// Helper function to get filename from URL\nfunction getFileNameFromUrl(url) {\n  try {\n    const urlParts = url.split('/');\n    return urlParts[urlParts.length - 1].split('?')[0] || 'file';\n  } catch (error) {\n    return 'file';\n  }\n}\n\nModal.setAppElement('#root');\n\nfunction App() {\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  const [customFileName, setCustomFileName] = useState('');\n  const [displayName, setDisplayName] = useState('');\n\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: { path: currentPath }\n      });\n      setFolders(response.data.folders);\n      setFiles(response.data.files);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n\n  const handleBreadcrumbClick = (index) => {\n    const newPath = currentPath.split('/').slice(0, index + 1).join('/');\n    setCurrentPath(newPath);\n  };\n\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        // Get default filename from URL if no custom name is provided\n        const fileName = customFileName.trim()\n          ? customFileName.trim()\n          : getFileNameFromUrl(uploadUrl);\n\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath,\n          fileName: fileName,\n          displayName: displayName || customFileName || fileName\n        });\n\n        console.log(response.data.message);\n        setUploadUrl('');\n        setCustomFileName('');\n        setDisplayName('');\n        alert('File uploaded successfully!');\n        fetchFolders();\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>My Drive</h1>\n        <button onClick={() => setIsUploadModalOpen(true)} className=\"upload-button\">Upload File</button>\n      </header>\n      <div className=\"breadcrumb\">\n        <span onClick={() => setCurrentPath('')}>root</span>\n        {currentPath.split('/').filter(Boolean).map((folder, index) => (\n          <span key={index} onClick={() => handleBreadcrumbClick(index)}>\n            {' / '}{folder}\n          </span>\n        ))}\n      </div>\n      <div className=\"content-container\">\n        {loading ? (\n          <div className=\"loading\">Loading...</div>\n        ) : error ? (\n          <div className=\"error\" onClick={fetchFolders}>\n            {error} (Click to retry)\n          </div>\n        ) : (\n          <>\n            {folders.length === 0 && files.length === 0 ? (\n              <div className=\"empty\">This folder is empty</div>\n            ) : (\n              <>\n                {folders.map(folder => (\n                  <div\n                    key={folder}\n                    className=\"item folder\"\n                    onClick={() => handleSelect(folder)}\n                  >\n                    <span className=\"icon\">📁</span>\n                    <span className=\"name\">{folder}</span>\n                  </div>\n                ))}\n                \n                {files.map(file => (\n                  <div key={file.fileId} className=\"item file\">\n                    <span className=\"icon\">📄</span>\n                    <span className=\"name\">\n                      {file.displayName || file.name}\n                    </span>\n                    <span className=\"size\">\n                      {(file.size / 1024 / 1024).toFixed(2)} MB\n                    </span>\n                  </div>\n                ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n\n      <Modal\n        isOpen={isUploadModalOpen}\n        onRequestClose={() => setIsUploadModalOpen(false)}\n        contentLabel=\"Upload File\"\n        className=\"upload-modal\"\n        overlayClassName=\"upload-modal-overlay\"\n      >\n        <h2>Upload File to {currentPath || 'root'}</h2>\n        <div className=\"upload-form\">\n          <div className=\"form-group\">\n            <label>File URL:</label>\n            <input\n              type=\"text\"\n              value={uploadUrl}\n              onChange={(e) => setUploadUrl(e.target.value)}\n              placeholder=\"Enter file URL\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Custom File Name:</label>\n            <input\n              type=\"text\"\n              value={customFileName}\n              onChange={(e) => setCustomFileName(e.target.value)}\n              placeholder=\"Enter file name\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Display Name (optional):</label>\n            <input\n              type=\"text\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              placeholder=\"Enter display name\"\n            />\n            <small>Use this for multi-word names</small>\n          </div>\n          <div className=\"button-group\">\n            <button onClick={handleUploadFile}>Upload</button>\n            <button onClick={() => setIsUploadModalOpen(false)}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}