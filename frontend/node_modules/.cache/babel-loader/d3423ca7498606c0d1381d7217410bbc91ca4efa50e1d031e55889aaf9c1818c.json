{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FolderSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderSelector({\n  onSelect,\n  selectedFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      console.log('Fetching folders...');\n      const response = await fetch('http://localhost:5005/folders');\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch folders');\n      }\n      const data = await response.json();\n      console.log('Folders received:', data);\n      setFolders(['root', ...data.folders]);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError(error.message || 'Failed to fetch folders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n  const handleTriggerClick = () => {\n    if (!isOpen && loading) {\n      // Retry loading folders when opening if previous attempt failed\n      fetchFolders();\n    }\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"folder-selector-trigger\",\n      onClick: handleTriggerClick,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedFolder || 'Select Folder'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item loading\",\n        children: \"Loading folders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: \"No folders found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this) : folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `folder-item ${selectedFolder === folder ? 'selected' : ''}`,\n        onClick: () => handleSelect(folder),\n        children: [\"\\uD83D\\uDCC1 \", folder || 'root']\n      }, folder, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderSelector, \"ElG9iVJQT/NjUST/ZO60NxNS8vc=\");\n_c = FolderSelector;\nexport default FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FolderSelector","onSelect","selectedFolder","_s","folders","setFolders","loading","setLoading","error","setError","isOpen","setIsOpen","fetchFolders","console","log","response","fetch","ok","errorData","json","Error","data","message","handleSelect","folder","handleTriggerClick","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './FolderSelector.css';\n\nfunction FolderSelector({ onSelect, selectedFolder }) {\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      console.log('Fetching folders...');\n      const response = await fetch('http://localhost:5005/folders');\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch folders');\n      }\n\n      const data = await response.json();\n      console.log('Folders received:', data);\n      setFolders(['root', ...data.folders]);\n      \n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError(error.message || 'Failed to fetch folders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n\n  const handleTriggerClick = () => {\n    if (!isOpen && loading) {\n      // Retry loading folders when opening if previous attempt failed\n      fetchFolders();\n    }\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"folder-selector\">\n      <button \n        type=\"button\"\n        className=\"folder-selector-trigger\"\n        onClick={handleTriggerClick}\n      >\n        <span>{selectedFolder || 'Select Folder'}</span>\n        <span className=\"arrow\">‚ñº</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"folder-list\">\n          {loading ? (\n            <div className=\"folder-item loading\">Loading folders...</div>\n          ) : error ? (\n            <div className=\"folder-item error\" onClick={fetchFolders}>\n              {error} (Click to retry)\n            </div>\n          ) : folders.length === 0 ? (\n            <div className=\"folder-item\">No folders found</div>\n          ) : (\n            folders.map(folder => (\n              <div\n                key={folder}\n                className={`folder-item ${selectedFolder === folder ? 'selected' : ''}`}\n                onClick={() => handleSelect(folder)}\n              >\n                üìÅ {folder || 'root'}\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FolderSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}