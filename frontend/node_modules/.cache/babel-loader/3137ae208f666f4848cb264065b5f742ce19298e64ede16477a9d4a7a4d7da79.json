{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FolderSelector.css';\n\n// B2 Configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst B2_CONFIG = {\n  apiUrl: 'https://api.backblazeb2.com',\n  keyId: '005eb77b989a2b70000000006',\n  applicationKey: 'K005oTpW9P0cUAyBSZPLJsta50Bu0jQ',\n  bucketId: '3ebbc707abc9d8399a320b17'\n};\nfunction FolderSelector({\n  onSelect,\n  selectedFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // Step 1: Authorize with B2\n      const authResponse = await axios({\n        method: 'GET',\n        url: `${B2_CONFIG.apiUrl}/b2api/v2/b2_authorize_account`,\n        headers: {\n          Authorization: `Basic ${btoa(`${B2_CONFIG.keyId}:${B2_CONFIG.applicationKey}`)}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Authorization'\n        },\n        withCredentials: true\n      });\n\n      // Step 2: List files using the authorization token\n      const listResponse = await axios({\n        method: 'POST',\n        url: `${authResponse.data.apiUrl}/b2api/v2/b2_list_file_names`,\n        headers: {\n          Authorization: authResponse.data.authorizationToken,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Authorization'\n        },\n        data: {\n          bucketId: B2_CONFIG.bucketId,\n          delimiter: '/',\n          prefix: ''\n        },\n        withCredentials: true\n      });\n\n      // Step 3: Extract folders from the response\n      const uniqueFolders = new Set();\n\n      // Get folders from file paths\n      listResponse.data.files.forEach(file => {\n        const pathParts = file.fileName.split('/');\n        if (pathParts.length > 1) {\n          const folderPath = pathParts.slice(0, -1).join('/');\n          uniqueFolders.add(folderPath);\n        }\n      });\n\n      // Get folders from common prefixes\n      if (listResponse.data.commonPrefixes) {\n        listResponse.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, ''));\n        });\n      }\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n    } catch (error) {\n      console.error('B2 API Error:', error);\n      if (error.response) {\n        console.error('Error Response:', error.response.data);\n        setError(`B2 API Error: ${error.response.data.message || error.response.data.code}`);\n      } else if (error.request) {\n        console.error('No Response:', error.request);\n        setError('No response from B2 API. Please check your network connection.');\n      } else {\n        console.error('Error:', error.message);\n        setError(`Error: ${error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"folder-selector-trigger\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedFolder || 'Select Folder'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item loading\",\n        children: \"Loading folders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this) : folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: \"No folders found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this) : folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `folder-item ${selectedFolder === folder ? 'selected' : ''}`,\n        onClick: () => handleSelect(folder),\n        children: [\"\\uD83D\\uDCC1 \", folder || 'root']\n      }, folder, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderSelector, \"ElG9iVJQT/NjUST/ZO60NxNS8vc=\");\n_c = FolderSelector;\nexport default FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","B2_CONFIG","apiUrl","keyId","applicationKey","bucketId","FolderSelector","onSelect","selectedFolder","_s","folders","setFolders","loading","setLoading","error","setError","isOpen","setIsOpen","fetchFolders","authResponse","method","url","headers","Authorization","btoa","withCredentials","listResponse","data","authorizationToken","delimiter","prefix","uniqueFolders","Set","files","forEach","file","pathParts","fileName","split","length","folderPath","slice","join","add","commonPrefixes","replace","sortedFolders","Array","from","sort","console","response","message","code","request","handleSelect","folder","className","children","type","onClick","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FolderSelector.css';\n\n// B2 Configuration\nconst B2_CONFIG = {\n  apiUrl: 'https://api.backblazeb2.com',\n  keyId: '005eb77b989a2b70000000006',\n  applicationKey: 'K005oTpW9P0cUAyBSZPLJsta50Bu0jQ',\n  bucketId: '3ebbc707abc9d8399a320b17'\n};\n\nfunction FolderSelector({ onSelect, selectedFolder }) {\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // Step 1: Authorize with B2\n      const authResponse = await axios({\n        method: 'GET',\n        url: `${B2_CONFIG.apiUrl}/b2api/v2/b2_authorize_account`,\n        headers: {\n          Authorization: `Basic ${btoa(`${B2_CONFIG.keyId}:${B2_CONFIG.applicationKey}`)}`,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Authorization'\n        },\n        withCredentials: true\n      });\n\n      // Step 2: List files using the authorization token\n      const listResponse = await axios({\n        method: 'POST',\n        url: `${authResponse.data.apiUrl}/b2api/v2/b2_list_file_names`,\n        headers: {\n          Authorization: authResponse.data.authorizationToken,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n          'Access-Control-Allow-Headers': 'Authorization'\n        },\n        data: {\n          bucketId: B2_CONFIG.bucketId,\n          delimiter: '/',\n          prefix: ''\n        },\n        withCredentials: true\n      });\n\n      // Step 3: Extract folders from the response\n      const uniqueFolders = new Set();\n\n      // Get folders from file paths\n      listResponse.data.files.forEach(file => {\n        const pathParts = file.fileName.split('/');\n        if (pathParts.length > 1) {\n          const folderPath = pathParts.slice(0, -1).join('/');\n          uniqueFolders.add(folderPath);\n        }\n      });\n\n      // Get folders from common prefixes\n      if (listResponse.data.commonPrefixes) {\n        listResponse.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, ''));\n        });\n      }\n\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n\n    } catch (error) {\n      console.error('B2 API Error:', error);\n      if (error.response) {\n        console.error('Error Response:', error.response.data);\n        setError(`B2 API Error: ${error.response.data.message || error.response.data.code}`);\n      } else if (error.request) {\n        console.error('No Response:', error.request);\n        setError('No response from B2 API. Please check your network connection.');\n      } else {\n        console.error('Error:', error.message);\n        setError(`Error: ${error.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"folder-selector\">\n      <button \n        type=\"button\"\n        className=\"folder-selector-trigger\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span>{selectedFolder || 'Select Folder'}</span>\n        <span className=\"arrow\">▼</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"folder-list\">\n          {loading ? (\n            <div className=\"folder-item loading\">Loading folders...</div>\n          ) : error ? (\n            <div className=\"folder-item error\" onClick={fetchFolders}>\n              {error} (Click to retry)\n            </div>\n          ) : folders.length === 0 ? (\n            <div className=\"folder-item\">No folders found</div>\n          ) : (\n            folders.map(folder => (\n              <div\n                key={folder}\n                className={`folder-item ${selectedFolder === folder ? 'selected' : ''}`}\n                onClick={() => handleSelect(folder)}\n              >\n                📁 {folder || 'root'}\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FolderSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}