{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\n// Helper function to get filename from URL\nfunction getFileNameFromUrl(url) {\n  try {\n    const urlParts = url.split('/');\n    return urlParts[urlParts.length - 1].split('?')[0] || 'file';\n  } catch (error) {\n    return 'file';\n  }\n}\nModal.setAppElement('#root');\nfunction App() {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [isNewFolderModalOpen, setIsNewFolderModalOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [contextMenu, setContextMenu] = useState({\n    show: false,\n    x: 0,\n    y: 0,\n    type: null,\n    // 'file' or 'folder'\n    item: null\n  });\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n\n  // Add click handler to hide context menu when clicking outside\n  useEffect(() => {\n    const handleClick = () => setContextMenu({\n      ...contextMenu,\n      show: false\n    });\n    document.addEventListener('click', handleClick);\n    return () => document.removeEventListener('click', handleClick);\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: {\n          path: currentPath\n        }\n      });\n      setFolders(response.data.folders);\n      setFiles(response.data.files);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n  const handleBreadcrumbClick = index => {\n    const newPath = currentPath.split('/').slice(0, index + 1).join('/');\n    setCurrentPath(newPath);\n  };\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        // Convert display name to URL-safe filename\n        const fileName = displayName.trim() ? displayName.trim().toLowerCase().replace(/[^a-z0-9.]/g, '-') // Replace any non-alphanumeric chars (except dots) with hyphens\n        .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen\n        : getFileNameFromUrl(uploadUrl);\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath,\n          fileName: fileName,\n          displayName: displayName.trim() || fileName\n        });\n        console.log(response.data.message);\n        setUploadUrl('');\n        setDisplayName('');\n        alert('File uploaded successfully!');\n        fetchFolders();\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n  const handleCreateFolder = async () => {\n    if (newFolderName.trim()) {\n      try {\n        // Construct the full path if we're in a subfolder\n        const fullPath = currentPath ? `${currentPath}/${newFolderName}` : newFolderName;\n        const response = await axios.post(`${API_BASE_URL}/b2/create-folder`, {\n          folderName: fullPath\n        });\n        console.log(response.data.message);\n        setNewFolderName('');\n        setIsNewFolderModalOpen(false);\n        fetchFolders(); // Refresh the folder list\n        alert('Folder created successfully!');\n      } catch (error) {\n        console.error('Failed to create folder:', error);\n        alert('Failed to create folder. Please try again.');\n      }\n    }\n  };\n  const handleDeleteFile = async file => {\n    if (window.confirm(`Are you sure you want to delete \"${file.name}\"?`)) {\n      try {\n        await axios.delete(`${API_BASE_URL}/b2/file/${file.fileId}`, {\n          params: {\n            fileName: currentPath ? `${currentPath}/${file.name}` : file.name\n          }\n        });\n        fetchFolders(); // Refresh the list\n        alert('File deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete file:', error);\n        alert('Failed to delete file. Please try again.');\n      }\n    }\n  };\n  const handleDeleteFolder = async folder => {\n    if (window.confirm(`Are you sure you want to delete folder \"${folder}\" and all its contents?`)) {\n      try {\n        const folderPath = currentPath ? `${currentPath}/${folder}` : folder;\n        await axios.delete(`${API_BASE_URL}/b2/folder/${folderPath}`);\n        fetchFolders(); // Refresh the list\n        alert('Folder deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete folder:', error);\n        alert('Failed to delete folder. Please try again.');\n      }\n    }\n  };\n  const handleContextMenu = (e, type, item) => {\n    e.preventDefault();\n    setContextMenu({\n      show: true,\n      x: e.pageX,\n      y: e.pageY,\n      type,\n      item\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Drive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsNewFolderModalOpen(true),\n          className: \"new-folder-button\",\n          children: \"New Folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsUploadModalOpen(true),\n          className: \"upload-button\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setCurrentPath(''),\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), currentPath.split('/').filter(Boolean).map((folder, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleBreadcrumbClick(index),\n        children: [' / ', folder]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: folders.length === 0 && files.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\",\n          children: \"This folder is empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item folder\",\n            onClick: () => handleSelect(folder),\n            onContextMenu: e => handleContextMenu(e, 'folder', folder),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDCC1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: folder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)\n          }, folder, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this)), files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item file\",\n            onContextMenu: e => handleContextMenu(e, 'file', file),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon\",\n                children: \"\\uD83D\\uDCC4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: file.displayName || file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"size\",\n                children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)\n          }, file.fileId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), contextMenu.show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu\",\n      style: {\n        top: contextMenu.y,\n        left: contextMenu.x\n      },\n      children: [contextMenu.type === 'folder' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleDeleteFolder(contextMenu.item);\n          setContextMenu({\n            ...contextMenu,\n            show: false\n          });\n        },\n        children: \"Delete Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), contextMenu.type === 'file' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleDeleteFile(contextMenu.item);\n          setContextMenu({\n            ...contextMenu,\n            show: false\n          });\n        },\n        children: \"Delete File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isUploadModalOpen,\n      onRequestClose: () => setIsUploadModalOpen(false),\n      contentLabel: \"Upload File\",\n      className: \"upload-modal\",\n      overlayClassName: \"upload-modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Upload File to \", currentPath || 'root']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"File URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: uploadUrl,\n            onChange: e => setUploadUrl(e.target.value),\n            placeholder: \"Enter file URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Display Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: displayName,\n            onChange: e => setDisplayName(e.target.value),\n            placeholder: \"Enter file name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Spaces and special characters will be converted to hyphens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUploadFile,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsUploadModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isNewFolderModalOpen,\n      onRequestClose: () => setIsNewFolderModalOpen(false),\n      contentLabel: \"Create New Folder\",\n      className: \"folder-modal\",\n      overlayClassName: \"folder-modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Create New Folder in \", currentPath || 'root']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Folder Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newFolderName,\n            onChange: e => setNewFolderName(e.target.value),\n            placeholder: \"Enter folder name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Spaces and special characters will be converted to hyphens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateFolder,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setIsNewFolderModalOpen(false);\n              setNewFolderName('');\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RqI8Cu8eMzaFVHixiry+oAvHpOo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_URL","getFileNameFromUrl","url","urlParts","split","length","error","setAppElement","App","_s","folders","setFolders","files","setFiles","currentPath","setCurrentPath","loading","setLoading","setError","isUploadModalOpen","setIsUploadModalOpen","uploadUrl","setUploadUrl","displayName","setDisplayName","isNewFolderModalOpen","setIsNewFolderModalOpen","newFolderName","setNewFolderName","contextMenu","setContextMenu","show","x","y","type","item","fetchFolders","handleClick","document","addEventListener","removeEventListener","response","get","params","path","data","console","handleSelect","folder","newPath","handleBreadcrumbClick","index","slice","join","handleUploadFile","trim","fileName","toLowerCase","replace","post","fileUrl","log","message","alert","handleCreateFolder","fullPath","folderName","handleDeleteFile","file","window","confirm","name","delete","fileId","handleDeleteFolder","folderPath","handleContextMenu","e","preventDefault","pageX","pageY","className","children","_jsxFileName","lineNumber","columnNumber","onClick","filter","Boolean","map","onContextMenu","size","toFixed","style","top","left","isOpen","onRequestClose","contentLabel","overlayClassName","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\n// Helper function to get filename from URL\nfunction getFileNameFromUrl(url) {\n  try {\n    const urlParts = url.split('/');\n    return urlParts[urlParts.length - 1].split('?')[0] || 'file';\n  } catch (error) {\n    return 'file';\n  }\n}\n\nModal.setAppElement('#root');\n\nfunction App() {\n  const [folders, setFolders] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  const [displayName, setDisplayName] = useState('');\n  const [isNewFolderModalOpen, setIsNewFolderModalOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [contextMenu, setContextMenu] = useState({\n    show: false,\n    x: 0,\n    y: 0,\n    type: null, // 'file' or 'folder'\n    item: null\n  });\n\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n\n  // Add click handler to hide context menu when clicking outside\n  useEffect(() => {\n    const handleClick = () => setContextMenu({ ...contextMenu, show: false });\n    document.addEventListener('click', handleClick);\n    return () => document.removeEventListener('click', handleClick);\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: { path: currentPath }\n      });\n      setFolders(response.data.folders);\n      setFiles(response.data.files);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n\n  const handleBreadcrumbClick = (index) => {\n    const newPath = currentPath.split('/').slice(0, index + 1).join('/');\n    setCurrentPath(newPath);\n  };\n\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        // Convert display name to URL-safe filename\n        const fileName = displayName.trim()\n          ? displayName.trim()\n              .toLowerCase()\n              .replace(/[^a-z0-9.]/g, '-') // Replace any non-alphanumeric chars (except dots) with hyphens\n              .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen\n          : getFileNameFromUrl(uploadUrl);\n\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath,\n          fileName: fileName,\n          displayName: displayName.trim() || fileName\n        });\n\n        console.log(response.data.message);\n        setUploadUrl('');\n        setDisplayName('');\n        alert('File uploaded successfully!');\n        fetchFolders();\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n\n  const handleCreateFolder = async () => {\n    if (newFolderName.trim()) {\n      try {\n        // Construct the full path if we're in a subfolder\n        const fullPath = currentPath \n          ? `${currentPath}/${newFolderName}`\n          : newFolderName;\n\n        const response = await axios.post(`${API_BASE_URL}/b2/create-folder`, {\n          folderName: fullPath\n        });\n\n        console.log(response.data.message);\n        setNewFolderName('');\n        setIsNewFolderModalOpen(false);\n        fetchFolders(); // Refresh the folder list\n        alert('Folder created successfully!');\n      } catch (error) {\n        console.error('Failed to create folder:', error);\n        alert('Failed to create folder. Please try again.');\n      }\n    }\n  };\n\n  const handleDeleteFile = async (file) => {\n    if (window.confirm(`Are you sure you want to delete \"${file.name}\"?`)) {\n      try {\n        await axios.delete(`${API_BASE_URL}/b2/file/${file.fileId}`, {\n          params: { \n            fileName: currentPath \n              ? `${currentPath}/${file.name}`\n              : file.name\n          }\n        });\n        fetchFolders(); // Refresh the list\n        alert('File deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete file:', error);\n        alert('Failed to delete file. Please try again.');\n      }\n    }\n  };\n\n  const handleDeleteFolder = async (folder) => {\n    if (window.confirm(`Are you sure you want to delete folder \"${folder}\" and all its contents?`)) {\n      try {\n        const folderPath = currentPath \n          ? `${currentPath}/${folder}`\n          : folder;\n        \n        await axios.delete(`${API_BASE_URL}/b2/folder/${folderPath}`);\n        fetchFolders(); // Refresh the list\n        alert('Folder deleted successfully');\n      } catch (error) {\n        console.error('Failed to delete folder:', error);\n        alert('Failed to delete folder. Please try again.');\n      }\n    }\n  };\n\n  const handleContextMenu = (e, type, item) => {\n    e.preventDefault();\n    setContextMenu({\n      show: true,\n      x: e.pageX,\n      y: e.pageY,\n      type,\n      item\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>My Drive</h1>\n        <div className=\"header-buttons\">\n          <button onClick={() => setIsNewFolderModalOpen(true)} className=\"new-folder-button\">\n            New Folder\n          </button>\n          <button onClick={() => setIsUploadModalOpen(true)} className=\"upload-button\">\n            Upload File\n          </button>\n        </div>\n      </header>\n      <div className=\"breadcrumb\">\n        <span onClick={() => setCurrentPath('')}>root</span>\n        {currentPath.split('/').filter(Boolean).map((folder, index) => (\n          <span key={index} onClick={() => handleBreadcrumbClick(index)}>\n            {' / '}{folder}\n          </span>\n        ))}\n      </div>\n      <div className=\"content-container\">\n        {loading ? (\n          <div className=\"loading\">Loading...</div>\n        ) : error ? (\n          <div className=\"error\" onClick={fetchFolders}>\n            {error} (Click to retry)\n          </div>\n        ) : (\n          <>\n            {folders.length === 0 && files.length === 0 ? (\n              <div className=\"empty\">This folder is empty</div>\n            ) : (\n              <>\n                {folders.map(folder => (\n                  <div \n                    key={folder} \n                    className=\"item folder\"\n                    onClick={() => handleSelect(folder)}\n                    onContextMenu={(e) => handleContextMenu(e, 'folder', folder)}\n                  >\n                    <div className=\"item-content\">\n                      <span className=\"icon\">📁</span>\n                      <span className=\"name\">{folder}</span>\n                    </div>\n                  </div>\n                ))}\n                \n                {files.map(file => (\n                  <div \n                    key={file.fileId} \n                    className=\"item file\"\n                    onContextMenu={(e) => handleContextMenu(e, 'file', file)}\n                  >\n                    <div className=\"item-content\">\n                      <span className=\"icon\">📄</span>\n                      <span className=\"name\">\n                        {file.displayName || file.name}\n                      </span>\n                      <span className=\"size\">\n                        {(file.size / 1024 / 1024).toFixed(2)} MB\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </>\n            )}\n          </>\n        )}\n      </div>\n\n      {/* Context Menu */}\n      {contextMenu.show && (\n        <div \n          className=\"context-menu\"\n          style={{ \n            top: contextMenu.y,\n            left: contextMenu.x \n          }}\n        >\n          {contextMenu.type === 'folder' && (\n            <button \n              onClick={() => {\n                handleDeleteFolder(contextMenu.item);\n                setContextMenu({ ...contextMenu, show: false });\n              }}\n            >\n              Delete Folder\n            </button>\n          )}\n          {contextMenu.type === 'file' && (\n            <button \n              onClick={() => {\n                handleDeleteFile(contextMenu.item);\n                setContextMenu({ ...contextMenu, show: false });\n              }}\n            >\n              Delete File\n            </button>\n          )}\n        </div>\n      )}\n\n      <Modal\n        isOpen={isUploadModalOpen}\n        onRequestClose={() => setIsUploadModalOpen(false)}\n        contentLabel=\"Upload File\"\n        className=\"upload-modal\"\n        overlayClassName=\"upload-modal-overlay\"\n      >\n        <h2>Upload File to {currentPath || 'root'}</h2>\n        <div className=\"upload-form\">\n          <div className=\"form-group\">\n            <label>File URL:</label>\n            <input\n              type=\"text\"\n              value={uploadUrl}\n              onChange={(e) => setUploadUrl(e.target.value)}\n              placeholder=\"Enter file URL\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Display Name:</label>\n            <input\n              type=\"text\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              placeholder=\"Enter file name\"\n            />\n            <small>Spaces and special characters will be converted to hyphens</small>\n          </div>\n          <div className=\"button-group\">\n            <button onClick={handleUploadFile}>Upload</button>\n            <button onClick={() => setIsUploadModalOpen(false)}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n\n      <Modal\n        isOpen={isNewFolderModalOpen}\n        onRequestClose={() => setIsNewFolderModalOpen(false)}\n        contentLabel=\"Create New Folder\"\n        className=\"folder-modal\"\n        overlayClassName=\"folder-modal-overlay\"\n      >\n        <h2>Create New Folder in {currentPath || 'root'}</h2>\n        <div className=\"folder-form\">\n          <div className=\"form-group\">\n            <label>Folder Name:</label>\n            <input\n              type=\"text\"\n              value={newFolderName}\n              onChange={(e) => setNewFolderName(e.target.value)}\n              placeholder=\"Enter folder name\"\n            />\n            <small>Spaces and special characters will be converted to hyphens</small>\n          </div>\n          <div className=\"button-group\">\n            <button onClick={handleCreateFolder}>Create</button>\n            <button onClick={() => {\n              setIsNewFolderModalOpen(false);\n              setNewFolderName('');\n            }}>Cancel</button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}