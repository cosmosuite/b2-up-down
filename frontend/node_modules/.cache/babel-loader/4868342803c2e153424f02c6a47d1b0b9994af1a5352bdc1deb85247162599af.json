{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\nModal.setAppElement('#root'); // Set the app element for accessibility\n\nfunction App() {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: {\n          path: currentPath\n        }\n      });\n      setFolders(response.data.folders);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath\n        });\n        console.log(response.data.message);\n        setUploadUrl('');\n        alert('File uploaded successfully!');\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Drive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsUploadModalOpen(true),\n        className: \"upload-button\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setCurrentPath(''),\n        children: \"root\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), currentPath.split('/').filter(Boolean).map((folder, index, arr) => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setCurrentPath(arr.slice(0, index + 1).join('/')),\n        children: [' / ', folder]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-container\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item loading\",\n        children: \"Loading folders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: \"No folders found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        onClick: () => handleSelect(folder),\n        children: [\"\\uD83D\\uDCC1 \", folder || 'root']\n      }, folder, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isUploadModalOpen,\n      onRequestClose: () => setIsUploadModalOpen(false),\n      contentLabel: \"Upload File\",\n      className: \"upload-modal\",\n      overlayClassName: \"upload-modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Upload File to \", currentPath || 'root']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: uploadUrl,\n        onChange: e => setUploadUrl(e.target.value),\n        placeholder: \"File URL to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUploadFile,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsUploadModalOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"d1CdltKN13C18AfRo5/H0wCEPvk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","setAppElement","App","_s","folders","setFolders","currentPath","setCurrentPath","loading","setLoading","error","setError","isUploadModalOpen","setIsUploadModalOpen","uploadUrl","setUploadUrl","fetchFolders","response","get","params","path","data","console","handleSelect","folder","newPath","handleUploadFile","trim","post","fileUrl","log","message","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","split","filter","Boolean","map","index","arr","slice","join","length","isOpen","onRequestClose","contentLabel","overlayClassName","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\nimport './App.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL;\n\nModal.setAppElement('#root'); // Set the app element for accessibility\n\nfunction App() {\n  const [folders, setFolders] = useState([]);\n  const [currentPath, setCurrentPath] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const [uploadUrl, setUploadUrl] = useState('');\n\n  useEffect(() => {\n    fetchFolders();\n  }, [currentPath]);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/b2/folders`, {\n        params: { path: currentPath }\n      });\n      setFolders(response.data.folders);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    const newPath = folder === 'root' ? '' : `${currentPath}/${folder}`;\n    setCurrentPath(newPath);\n  };\n\n  const handleUploadFile = async () => {\n    if (uploadUrl.trim()) {\n      try {\n        const response = await axios.post(`${API_BASE_URL}/download`, {\n          fileUrl: uploadUrl,\n          folder: currentPath\n        });\n        console.log(response.data.message);\n        setUploadUrl('');\n        alert('File uploaded successfully!');\n      } catch (error) {\n        console.error('Failed to upload file:', error);\n        alert('Failed to upload file. Please try again.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>My Drive</h1>\n        <button onClick={() => setIsUploadModalOpen(true)} className=\"upload-button\">Upload File</button>\n      </header>\n      <div className=\"breadcrumb\">\n        <span onClick={() => setCurrentPath('')}>root</span>\n        {currentPath.split('/').filter(Boolean).map((folder, index, arr) => (\n          <span key={index} onClick={() => setCurrentPath(arr.slice(0, index + 1).join('/'))}>\n            {' / '}{folder}\n          </span>\n        ))}\n      </div>\n      <div className=\"folder-container\">\n        {loading ? (\n          <div className=\"folder-item loading\">Loading folders...</div>\n        ) : error ? (\n          <div className=\"folder-item error\" onClick={fetchFolders}>\n            {error} (Click to retry)\n          </div>\n        ) : folders.length === 0 ? (\n          <div className=\"folder-item\">No folders found</div>\n        ) : (\n          folders.map(folder => (\n            <div\n              key={folder}\n              className=\"folder-item\"\n              onClick={() => handleSelect(folder)}\n            >\n              📁 {folder || 'root'}\n            </div>\n          ))\n        )}\n      </div>\n\n      <Modal\n        isOpen={isUploadModalOpen}\n        onRequestClose={() => setIsUploadModalOpen(false)}\n        contentLabel=\"Upload File\"\n        className=\"upload-modal\"\n        overlayClassName=\"upload-modal-overlay\"\n      >\n        <h2>Upload File to {currentPath || 'root'}</h2>\n        <input\n          type=\"text\"\n          value={uploadUrl}\n          onChange={(e) => setUploadUrl(e.target.value)}\n          placeholder=\"File URL to upload\"\n        />\n        <button onClick={handleUploadFile}>Upload</button>\n        <button onClick={() => setIsUploadModalOpen(false)}>Close</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}