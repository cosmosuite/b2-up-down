{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { B2 } from '@backblaze/b2-sdk';\nimport './FolderSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst b2 = new B2({\n  applicationKeyId: '005eb77b989a2b70000000006',\n  applicationKey: 'K005oTpW9P0cUAyBSZPLJsta50Bu0jQ'\n});\nfunction FolderSelector({\n  onSelect,\n  selectedFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // Authorize with B2\n      await b2.authorize();\n\n      // List files\n      const response = await b2.listFileNames({\n        bucketId: '3ebbc707abc9d8399a320b17',\n        delimiter: '/',\n        prefix: ''\n      });\n\n      // Extract unique folders\n      const uniqueFolders = new Set();\n\n      // Add folders from files\n      response.data.files.forEach(file => {\n        const path = file.fileName;\n        const folderPath = path.split('/').slice(0, -1).join('/');\n        if (folderPath) uniqueFolders.add(folderPath);\n      });\n\n      // Add folders from common prefixes\n      if (response.data.commonPrefixes) {\n        response.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, '')); // Remove trailing slash\n        });\n      }\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"folder-selector-trigger\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedFolder || 'Select Folder'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item loading\",\n        children: \"Loading folders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item error\",\n        onClick: fetchFolders,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: \"No folders found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this) : folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `folder-item ${selectedFolder === folder ? 'selected' : ''}`,\n        onClick: () => handleSelect(folder),\n        children: [\"\\uD83D\\uDCC1 \", folder || 'root']\n      }, folder, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderSelector, \"ElG9iVJQT/NjUST/ZO60NxNS8vc=\");\n_c = FolderSelector;\nexport default FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");","map":{"version":3,"names":["React","useState","useEffect","B2","jsxDEV","_jsxDEV","b2","applicationKeyId","applicationKey","FolderSelector","onSelect","selectedFolder","_s","folders","setFolders","loading","setLoading","error","setError","isOpen","setIsOpen","fetchFolders","authorize","response","listFileNames","bucketId","delimiter","prefix","uniqueFolders","Set","data","files","forEach","file","path","fileName","folderPath","split","slice","join","add","commonPrefixes","replace","sortedFolders","Array","from","sort","console","handleSelect","folder","className","children","type","onClick","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { B2 } from '@backblaze/b2-sdk';\nimport './FolderSelector.css';\n\nconst b2 = new B2({\n  applicationKeyId: '005eb77b989a2b70000000006',\n  applicationKey: 'K005oTpW9P0cUAyBSZPLJsta50Bu0jQ'\n});\n\nfunction FolderSelector({ onSelect, selectedFolder }) {\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // Authorize with B2\n      await b2.authorize();\n\n      // List files\n      const response = await b2.listFileNames({\n        bucketId: '3ebbc707abc9d8399a320b17',\n        delimiter: '/',\n        prefix: ''\n      });\n\n      // Extract unique folders\n      const uniqueFolders = new Set();\n      \n      // Add folders from files\n      response.data.files.forEach(file => {\n        const path = file.fileName;\n        const folderPath = path.split('/').slice(0, -1).join('/');\n        if (folderPath) uniqueFolders.add(folderPath);\n      });\n\n      // Add folders from common prefixes\n      if (response.data.commonPrefixes) {\n        response.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, '')); // Remove trailing slash\n        });\n      }\n\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError('Failed to fetch folders. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"folder-selector\">\n      <button \n        type=\"button\"\n        className=\"folder-selector-trigger\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span>{selectedFolder || 'Select Folder'}</span>\n        <span className=\"arrow\">‚ñº</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"folder-list\">\n          {loading ? (\n            <div className=\"folder-item loading\">Loading folders...</div>\n          ) : error ? (\n            <div className=\"folder-item error\" onClick={fetchFolders}>\n              {error} (Click to retry)\n            </div>\n          ) : folders.length === 0 ? (\n            <div className=\"folder-item\">No folders found</div>\n          ) : (\n            folders.map(folder => (\n              <div\n                key={folder}\n                className={`folder-item ${selectedFolder === folder ? 'selected' : ''}`}\n                onClick={() => handleSelect(folder)}\n              >\n                üìÅ {folder || 'root'}\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FolderSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}