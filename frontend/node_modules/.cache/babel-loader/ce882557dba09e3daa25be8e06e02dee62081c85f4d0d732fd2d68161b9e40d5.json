{"ast":null,"code":"const _ = require('lodash');\nconst utils = require('./../utils');\nconst request = require('../request');\nconst endpoints = require('../endpoints');\nexports.TYPES = {\n  ALL_PUBLIC: 'allPublic',\n  ALL_PRIVATE: 'allPrivate'\n};\nexports.create = function (b2, argsOrBucketName, undefOrBucketType) {\n  // we're allowing an args object OR bucketName and bucketType for backwards compatibility\n  let bucketName = argsOrBucketName;\n  let bucketType = undefOrBucketType;\n  if (!_.isString(argsOrBucketName)) {\n    bucketName = _.get(argsOrBucketName, 'bucketName');\n    bucketType = _.get(argsOrBucketName, 'bucketType');\n  }\n  const options = {\n    url: endpoints(b2).createBucketUrl,\n    method: 'POST',\n    headers: utils.getAuthHeaderObjectWithToken(b2),\n    data: {\n      accountId: b2.accountId,\n      bucketName: bucketName,\n      bucketType: bucketType\n    }\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(argsOrBucketName, 'axios', {}), options, _.get(argsOrBucketName, 'axiosOverride', {})));\n};\nexports.delete = function (b2, argsOrBucketId) {\n  // we're allowing an args object OR bucketId for backwards compatibility\n  let bucketId = argsOrBucketId;\n  if (!_.isString(argsOrBucketId)) {\n    bucketId = _.get(argsOrBucketId, 'bucketId');\n  }\n  const options = {\n    url: endpoints(b2).deleteBucketUrl,\n    method: 'POST',\n    data: {\n      accountId: b2.accountId,\n      bucketId: bucketId\n    },\n    headers: utils.getAuthHeaderObjectWithToken(b2)\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(argsOrBucketId, 'axios', {}), options, _.get(argsOrBucketId, 'axiosOverride', {})));\n};\nexports.list = function (b2, args) {\n  const options = {\n    url: endpoints(b2).listBucketUrl,\n    method: 'POST',\n    data: {\n      accountId: b2.accountId\n    },\n    headers: utils.getAuthHeaderObjectWithToken(b2)\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(args, 'axios', {}), options, _.get(args, 'axiosOverride', {})));\n};\n\n// https://www.backblaze.com/b2/docs/b2_list_buckets.html\nexports.get = function (b2, args) {\n  const data = {\n    accountId: b2.accountId\n  };\n\n  // only one of these can/should be used at a time\n  if (args.bucketName) {\n    data.bucketName = args.bucketName;\n  } else if (args.bucketId) {\n    data.bucketId = args.bucketId;\n  }\n  const options = {\n    url: endpoints(b2).listBucketUrl,\n    method: 'POST',\n    data,\n    headers: utils.getAuthHeaderObjectWithToken(b2)\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(args, 'axios', {}), options, _.get(args, 'axiosOverride', {})));\n};\nexports.update = function (b2, argsOrBucketId, undefOrBucketType) {\n  // we're allowing an args object OR bucketId and bucketType for backwards compatibility\n  let bucketId = argsOrBucketId;\n  let bucketType = undefOrBucketType;\n  if (!_.isString(argsOrBucketId)) {\n    bucketId = _.get(argsOrBucketId, 'bucketId');\n    bucketType = _.get(argsOrBucketId, 'bucketType');\n  }\n  const options = {\n    url: endpoints(b2).updateBucketUrl,\n    method: 'POST',\n    data: {\n      accountId: b2.accountId,\n      bucketId: bucketId,\n      bucketType: bucketType\n    },\n    headers: utils.getAuthHeaderObjectWithToken(b2)\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(argsOrBucketId, 'axios', {}), options, _.get(argsOrBucketId, 'axiosOverride', {})));\n};\nexports.getUploadUrl = function (b2, argsOrBucketId) {\n  // we're allowing an args object OR bucketId for backwards compatibility\n  let bucketId = argsOrBucketId;\n  if (!_.isString(argsOrBucketId)) {\n    bucketId = _.get(argsOrBucketId, 'bucketId');\n  }\n  const options = {\n    url: endpoints(b2).getBucketUploadUrl,\n    method: 'POST',\n    data: {\n      bucketId: bucketId\n    },\n    headers: utils.getAuthHeaderObjectWithToken(b2)\n  };\n  // merge order matters here: later objects override earlier objects\n  return request.sendRequest(_.merge({}, _.get(argsOrBucketId, 'axios', {}), options, _.get(argsOrBucketId, 'axiosOverride', {})));\n};","map":{"version":3,"names":["_","require","utils","request","endpoints","exports","TYPES","ALL_PUBLIC","ALL_PRIVATE","create","b2","argsOrBucketName","undefOrBucketType","bucketName","bucketType","isString","get","options","url","createBucketUrl","method","headers","getAuthHeaderObjectWithToken","data","accountId","sendRequest","merge","delete","argsOrBucketId","bucketId","deleteBucketUrl","list","args","listBucketUrl","update","updateBucketUrl","getUploadUrl","getBucketUploadUrl"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/node_modules/backblaze-b2/lib/actions/bucket.js"],"sourcesContent":["const _ = require('lodash');\nconst utils = require('./../utils');\nconst request = require('../request');\nconst endpoints = require('../endpoints');\n\nexports.TYPES = {\n    ALL_PUBLIC: 'allPublic',\n    ALL_PRIVATE: 'allPrivate'\n};\n\nexports.create = function(b2, argsOrBucketName, undefOrBucketType) {\n    // we're allowing an args object OR bucketName and bucketType for backwards compatibility\n    let bucketName = argsOrBucketName;\n    let bucketType = undefOrBucketType;\n    if (!_.isString(argsOrBucketName)) {\n        bucketName = _.get(argsOrBucketName, 'bucketName');\n        bucketType = _.get(argsOrBucketName, 'bucketType');\n    }\n    const options = {\n        url: endpoints(b2).createBucketUrl,\n        method: 'POST',\n        headers: utils.getAuthHeaderObjectWithToken(b2),\n        data: {\n            accountId: b2.accountId,\n            bucketName: bucketName,\n            bucketType: bucketType\n        }\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(argsOrBucketName, 'axios', {}),\n        options,\n        _.get(argsOrBucketName, 'axiosOverride', {})\n    ));\n};\n\nexports.delete = function(b2, argsOrBucketId) {\n    // we're allowing an args object OR bucketId for backwards compatibility\n    let bucketId = argsOrBucketId;\n    if (!_.isString(argsOrBucketId)) {\n        bucketId = _.get(argsOrBucketId, 'bucketId');\n    }\n    const options = {\n        url: endpoints(b2).deleteBucketUrl,\n        method: 'POST',\n        data: {\n            accountId: b2.accountId,\n            bucketId: bucketId\n        },\n        headers: utils.getAuthHeaderObjectWithToken(b2)\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(argsOrBucketId, 'axios', {}),\n        options,\n        _.get(argsOrBucketId, 'axiosOverride', {})\n    ));\n};\n\nexports.list = function(b2, args) {\n    const options = {\n        url: endpoints(b2).listBucketUrl,\n        method: 'POST',\n        data: {\n            accountId: b2.accountId\n        },\n        headers: utils.getAuthHeaderObjectWithToken(b2)\n\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(args, 'axios', {}),\n        options,\n        _.get(args, 'axiosOverride', {})\n    ));\n};\n\n// https://www.backblaze.com/b2/docs/b2_list_buckets.html\nexports.get = function(b2, args) {\n    const data = {\n        accountId: b2.accountId,\n    };\n\n    // only one of these can/should be used at a time\n    if (args.bucketName) {\n        data.bucketName = args.bucketName;\n    } else if (args.bucketId) {\n        data.bucketId = args.bucketId;\n    }\n\n    const options = {\n        url: endpoints(b2).listBucketUrl,\n        method: 'POST',\n        data,\n        headers: utils.getAuthHeaderObjectWithToken(b2)\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(args, 'axios', {}),\n        options,\n        _.get(args, 'axiosOverride', {})\n    ));\n};\n\nexports.update = function(b2, argsOrBucketId, undefOrBucketType) {\n    // we're allowing an args object OR bucketId and bucketType for backwards compatibility\n    let bucketId = argsOrBucketId;\n    let bucketType = undefOrBucketType;\n    if (!_.isString(argsOrBucketId)) {\n        bucketId = _.get(argsOrBucketId, 'bucketId');\n        bucketType = _.get(argsOrBucketId, 'bucketType');\n    }\n    const options = {\n        url: endpoints(b2).updateBucketUrl,\n        method: 'POST',\n        data: {\n            accountId: b2.accountId,\n            bucketId: bucketId,\n            bucketType: bucketType\n        },\n        headers: utils.getAuthHeaderObjectWithToken(b2)\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(argsOrBucketId, 'axios', {}),\n        options,\n        _.get(argsOrBucketId, 'axiosOverride', {})\n    ));\n};\n\nexports.getUploadUrl = function(b2, argsOrBucketId) {\n    // we're allowing an args object OR bucketId for backwards compatibility\n    let bucketId = argsOrBucketId;\n    if (!_.isString(argsOrBucketId)) {\n        bucketId = _.get(argsOrBucketId, 'bucketId');\n    }\n    const options = {\n        url: endpoints(b2).getBucketUploadUrl,\n        method: 'POST',\n        data: {\n            bucketId: bucketId\n        },\n        headers: utils.getAuthHeaderObjectWithToken(b2)\n    };\n    // merge order matters here: later objects override earlier objects\n    return request.sendRequest(_.merge({},\n        _.get(argsOrBucketId, 'axios', {}),\n        options,\n        _.get(argsOrBucketId, 'axiosOverride', {})\n    ));\n};\n"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AACnC,MAAME,OAAO,GAAGF,OAAO,CAAC,YAAY,CAAC;AACrC,MAAMG,SAAS,GAAGH,OAAO,CAAC,cAAc,CAAC;AAEzCI,OAAO,CAACC,KAAK,GAAG;EACZC,UAAU,EAAE,WAAW;EACvBC,WAAW,EAAE;AACjB,CAAC;AAEDH,OAAO,CAACI,MAAM,GAAG,UAASC,EAAE,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAE;EAC/D;EACA,IAAIC,UAAU,GAAGF,gBAAgB;EACjC,IAAIG,UAAU,GAAGF,iBAAiB;EAClC,IAAI,CAACZ,CAAC,CAACe,QAAQ,CAACJ,gBAAgB,CAAC,EAAE;IAC/BE,UAAU,GAAGb,CAAC,CAACgB,GAAG,CAACL,gBAAgB,EAAE,YAAY,CAAC;IAClDG,UAAU,GAAGd,CAAC,CAACgB,GAAG,CAACL,gBAAgB,EAAE,YAAY,CAAC;EACtD;EACA,MAAMM,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAACS,eAAe;IAClCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE,CAAC;IAC/Ca,IAAI,EAAE;MACFC,SAAS,EAAEd,EAAE,CAACc,SAAS;MACvBX,UAAU,EAAEA,UAAU;MACtBC,UAAU,EAAEA;IAChB;EACJ,CAAC;EACD;EACA,OAAOX,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACL,gBAAgB,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EACpCM,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACL,gBAAgB,EAAE,eAAe,EAAE,CAAC,CAAC,CAC/C,CAAC,CAAC;AACN,CAAC;AAEDN,OAAO,CAACsB,MAAM,GAAG,UAASjB,EAAE,EAAEkB,cAAc,EAAE;EAC1C;EACA,IAAIC,QAAQ,GAAGD,cAAc;EAC7B,IAAI,CAAC5B,CAAC,CAACe,QAAQ,CAACa,cAAc,CAAC,EAAE;IAC7BC,QAAQ,GAAG7B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,UAAU,CAAC;EAChD;EACA,MAAMX,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAACoB,eAAe;IAClCV,MAAM,EAAE,MAAM;IACdG,IAAI,EAAE;MACFC,SAAS,EAAEd,EAAE,CAACc,SAAS;MACvBK,QAAQ,EAAEA;IACd,CAAC;IACDR,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE;EAClD,CAAC;EACD;EACA,OAAOP,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAClCX,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,eAAe,EAAE,CAAC,CAAC,CAC7C,CAAC,CAAC;AACN,CAAC;AAEDvB,OAAO,CAAC0B,IAAI,GAAG,UAASrB,EAAE,EAAEsB,IAAI,EAAE;EAC9B,MAAMf,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAACuB,aAAa;IAChCb,MAAM,EAAE,MAAM;IACdG,IAAI,EAAE;MACFC,SAAS,EAAEd,EAAE,CAACc;IAClB,CAAC;IACDH,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE;EAElD,CAAC;EACD;EACA,OAAOP,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACgB,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EACxBf,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACgB,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC,CACnC,CAAC,CAAC;AACN,CAAC;;AAED;AACA3B,OAAO,CAACW,GAAG,GAAG,UAASN,EAAE,EAAEsB,IAAI,EAAE;EAC7B,MAAMT,IAAI,GAAG;IACTC,SAAS,EAAEd,EAAE,CAACc;EAClB,CAAC;;EAED;EACA,IAAIQ,IAAI,CAACnB,UAAU,EAAE;IACjBU,IAAI,CAACV,UAAU,GAAGmB,IAAI,CAACnB,UAAU;EACrC,CAAC,MAAM,IAAImB,IAAI,CAACH,QAAQ,EAAE;IACtBN,IAAI,CAACM,QAAQ,GAAGG,IAAI,CAACH,QAAQ;EACjC;EAEA,MAAMZ,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAACuB,aAAa;IAChCb,MAAM,EAAE,MAAM;IACdG,IAAI;IACJF,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE;EAClD,CAAC;EACD;EACA,OAAOP,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACgB,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EACxBf,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACgB,IAAI,EAAE,eAAe,EAAE,CAAC,CAAC,CACnC,CAAC,CAAC;AACN,CAAC;AAED3B,OAAO,CAAC6B,MAAM,GAAG,UAASxB,EAAE,EAAEkB,cAAc,EAAEhB,iBAAiB,EAAE;EAC7D;EACA,IAAIiB,QAAQ,GAAGD,cAAc;EAC7B,IAAId,UAAU,GAAGF,iBAAiB;EAClC,IAAI,CAACZ,CAAC,CAACe,QAAQ,CAACa,cAAc,CAAC,EAAE;IAC7BC,QAAQ,GAAG7B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,UAAU,CAAC;IAC5Cd,UAAU,GAAGd,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,YAAY,CAAC;EACpD;EACA,MAAMX,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAACyB,eAAe;IAClCf,MAAM,EAAE,MAAM;IACdG,IAAI,EAAE;MACFC,SAAS,EAAEd,EAAE,CAACc,SAAS;MACvBK,QAAQ,EAAEA,QAAQ;MAClBf,UAAU,EAAEA;IAChB,CAAC;IACDO,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE;EAClD,CAAC;EACD;EACA,OAAOP,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAClCX,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,eAAe,EAAE,CAAC,CAAC,CAC7C,CAAC,CAAC;AACN,CAAC;AAEDvB,OAAO,CAAC+B,YAAY,GAAG,UAAS1B,EAAE,EAAEkB,cAAc,EAAE;EAChD;EACA,IAAIC,QAAQ,GAAGD,cAAc;EAC7B,IAAI,CAAC5B,CAAC,CAACe,QAAQ,CAACa,cAAc,CAAC,EAAE;IAC7BC,QAAQ,GAAG7B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,UAAU,CAAC;EAChD;EACA,MAAMX,OAAO,GAAG;IACZC,GAAG,EAAEd,SAAS,CAACM,EAAE,CAAC,CAAC2B,kBAAkB;IACrCjB,MAAM,EAAE,MAAM;IACdG,IAAI,EAAE;MACFM,QAAQ,EAAEA;IACd,CAAC;IACDR,OAAO,EAAEnB,KAAK,CAACoB,4BAA4B,CAACZ,EAAE;EAClD,CAAC;EACD;EACA,OAAOP,OAAO,CAACsB,WAAW,CAACzB,CAAC,CAAC0B,KAAK,CAAC,CAAC,CAAC,EACjC1B,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,EAClCX,OAAO,EACPjB,CAAC,CAACgB,GAAG,CAACY,cAAc,EAAE,eAAe,EAAE,CAAC,CAAC,CAC7C,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}