{"ast":null,"code":"var _jsxFileName = \"/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FolderSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FolderSelector({\n  onSelect,\n  selectedFolder\n}) {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // First authorize with B2\n      const authResponse = await axios({\n        method: 'get',\n        url: 'https://api.backblazeb2.com/b2api/v2/b2_authorize_account',\n        headers: {\n          Authorization: `Basic ${btoa('005eb77b989a2b70000000006:K005oTpW9P0cUAyBSZPLJsta50Bu0jQ')}`\n        }\n      });\n\n      // Then list files to get folders\n      const listResponse = await axios({\n        method: 'post',\n        url: `${authResponse.data.apiUrl}/b2api/v2/b2_list_file_names`,\n        headers: {\n          Authorization: authResponse.data.authorizationToken\n        },\n        data: {\n          bucketId: '3ebbc707abc9d8399a320b17',\n          delimiter: '/',\n          prefix: ''\n        }\n      });\n\n      // Extract unique folders from file paths\n      const uniqueFolders = new Set();\n      listResponse.data.files.forEach(file => {\n        const path = file.fileName;\n        const folderPath = path.split('/').slice(0, -1).join('/');\n        if (folderPath) uniqueFolders.add(folderPath);\n      });\n\n      // Also check for folders in common prefixes\n      if (listResponse.data.commonPrefixes) {\n        listResponse.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, '')); // Remove trailing slash\n        });\n      }\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Folder fetch error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch folders');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelect = folder => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n  const handleRetry = () => {\n    fetchFolders();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"folder-selector-trigger\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: selectedFolder || 'Select Folder'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-list\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item loading\",\n        children: \"Loading folders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item error\",\n        onClick: handleRetry,\n        children: [error, \" (Click to retry)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this) : folders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-item\",\n        children: \"No folders found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `folder-item ${selectedFolder === folder ? 'selected' : ''}`,\n        onClick: () => handleSelect(folder),\n        children: [\"\\uD83D\\uDCC1 \", folder || 'root']\n      }, folder, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(FolderSelector, \"ElG9iVJQT/NjUST/ZO60NxNS8vc=\");\n_c = FolderSelector;\nexport default FolderSelector;\nvar _c;\n$RefreshReg$(_c, \"FolderSelector\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","FolderSelector","onSelect","selectedFolder","_s","folders","setFolders","loading","setLoading","error","setError","isOpen","setIsOpen","fetchFolders","authResponse","method","url","headers","Authorization","btoa","listResponse","data","apiUrl","authorizationToken","bucketId","delimiter","prefix","uniqueFolders","Set","files","forEach","file","path","fileName","folderPath","split","slice","join","add","commonPrefixes","replace","sortedFolders","Array","from","sort","_error$response","_error$response$data","console","response","message","handleSelect","folder","handleRetry","className","children","type","onClick","_jsxFileName","lineNumber","columnNumber","length","map","_c","$RefreshReg$"],"sources":["/Users/chanakyaratnam/Library/Mobile Documents/com~apple~CloudDocs/Codes/b2-up-down/frontend/src/components/FolderSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './FolderSelector.css';\n\nfunction FolderSelector({ onSelect, selectedFolder }) {\n  const [folders, setFolders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  useEffect(() => {\n    fetchFolders();\n  }, []);\n\n  const fetchFolders = async () => {\n    try {\n      setLoading(true);\n\n      // First authorize with B2\n      const authResponse = await axios({\n        method: 'get',\n        url: 'https://api.backblazeb2.com/b2api/v2/b2_authorize_account',\n        headers: {\n          Authorization: `Basic ${btoa('005eb77b989a2b70000000006:K005oTpW9P0cUAyBSZPLJsta50Bu0jQ')}`\n        }\n      });\n\n      // Then list files to get folders\n      const listResponse = await axios({\n        method: 'post',\n        url: `${authResponse.data.apiUrl}/b2api/v2/b2_list_file_names`,\n        headers: {\n          Authorization: authResponse.data.authorizationToken\n        },\n        data: {\n          bucketId: '3ebbc707abc9d8399a320b17',\n          delimiter: '/',\n          prefix: ''\n        }\n      });\n\n      // Extract unique folders from file paths\n      const uniqueFolders = new Set();\n      listResponse.data.files.forEach(file => {\n        const path = file.fileName;\n        const folderPath = path.split('/').slice(0, -1).join('/');\n        if (folderPath) uniqueFolders.add(folderPath);\n      });\n\n      // Also check for folders in common prefixes\n      if (listResponse.data.commonPrefixes) {\n        listResponse.data.commonPrefixes.forEach(prefix => {\n          uniqueFolders.add(prefix.replace(/\\/$/, '')); // Remove trailing slash\n        });\n      }\n\n      const sortedFolders = Array.from(uniqueFolders).sort();\n      setFolders(['root', ...sortedFolders]);\n      setError(null);\n    } catch (error) {\n      console.error('Folder fetch error:', error);\n      setError(error.response?.data?.message || 'Failed to fetch folders');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSelect = (folder) => {\n    onSelect(folder === 'root' ? '' : folder);\n    setIsOpen(false);\n  };\n\n  const handleRetry = () => {\n    fetchFolders();\n  };\n\n  return (\n    <div className=\"folder-selector\">\n      <button \n        type=\"button\"\n        className=\"folder-selector-trigger\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span>{selectedFolder || 'Select Folder'}</span>\n        <span className=\"arrow\">‚ñº</span>\n      </button>\n      \n      {isOpen && (\n        <div className=\"folder-list\">\n          {loading ? (\n            <div className=\"folder-item loading\">Loading folders...</div>\n          ) : error ? (\n            <div className=\"folder-item error\" onClick={handleRetry}>\n              {error} (Click to retry)\n            </div>\n          ) : folders.length === 0 ? (\n            <div className=\"folder-item\">No folders found</div>\n          ) : (\n            folders.map(folder => (\n              <div\n                key={folder}\n                className={`folder-item ${selectedFolder === folder ? 'selected' : ''}`}\n                onClick={() => handleSelect(folder)}\n              >\n                üìÅ {folder || 'root'}\n              </div>\n            ))\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FolderSelector; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}